{"version":3,"sources":["components/List.js","components/Start.js","App.js","index.js"],"names":["List","list","map","item","key","Start","state","isVisible","props","selectLength","value","handlerToggler","setState","sortAlphabetically","prevState","sort","sortByLength","a","b","length","reverse","reset","this","filteredGoods","filter","good","type","onClick","onChange","event","target","React","Component","goodsFromServer","App","className","ReactDOM","render","document","getElementById"],"mappings":"4OAiBeA,EAdF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,4BACGA,EAAKC,KAAI,SAAAC,GAAI,OACZ,wBAAIC,IAAKD,GACNA,QCyFME,E,4MA3FbC,MAAQ,CACNC,WAAW,EACXN,KAAK,YAAK,EAAKO,MAAMP,MACrBQ,aAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,MAAO,K,EAGTC,eAAiB,kBACf,EAAKC,UAAS,SAAAN,GAAK,MAAK,CAAEC,WAAYD,EAAMC,e,EAG9CM,mBAAqB,kBACnB,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAAEb,KAAM,YAAIa,EAAUb,MAAMc,Y,EAG1DC,aAAe,kBACb,EAAKJ,UAAS,SAAAE,GAAS,MAAK,CAC1Bb,KAAM,YAAIa,EAAUb,MAAMc,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,e,EAI1DC,QAAU,kBACR,EAAKR,UAAS,SAAAE,GAAS,MAAK,CAC1Bb,KAAM,YAAIa,EAAUb,MAAMmB,e,EAI9BC,MAAQ,kBACN,EAAKT,SAAS,CACZX,KAAK,YAAK,EAAKO,MAAMP,MACrBS,MAAO,K,uDAID,IAAD,SAC0CY,KAAKhB,MAA9CL,EADD,EACCA,KAAMQ,EADP,EACOA,aAAcC,EADrB,EACqBA,MAAOH,EAD5B,EAC4BA,UAC7BgB,EAAgBtB,EAAKuB,QAAO,SAAAC,GAAI,OAAIA,EAAKN,QAAUT,KAEzD,OACE,oCACGH,EAEG,6BACE,kBAAC,EAAD,CAAMN,KAAMsB,IAEZ,4BAAQG,KAAK,SAASC,QAASL,KAAKT,oBAApC,uBAIA,4BAAQa,KAAK,SAASC,QAASL,KAAKN,cAApC,kBAIA,4BAAQU,KAAK,SAASC,QAASL,KAAKF,SAApC,WAIA,4BAAQM,KAAK,SAASC,QAASL,KAAKD,OAApC,SAIA,4BACEX,MAAOA,EACPkB,SAAU,SAACC,GACT,EAAKjB,SAAS,CAAEF,OAAQmB,EAAMC,OAAOpB,UAGtCD,EAAaP,KAAI,SAAAC,GAAI,OACpB,4BAAQC,IAAKD,GAAOA,QAM1B,GACFI,EAME,GAJA,4BAAQmB,KAAK,SAASC,QAASL,KAAKX,gBAApC,iB,GA9EQoB,IAAMC,WCApBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUaC,EAPH,kBACV,yBAAKC,UAAU,OACb,qCACA,kBAAC,EAAD,CAAOlC,KAAMgC,MChBjBG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d896a6a4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst List = ({ list }) => (\n  <ul>\n    {list.map(item => (\n      <li key={item}>\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n\nList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from './List';\n\nclass Start extends React.Component {\n  state = {\n    isVisible: false,\n    list: [...this.props.list],\n    selectLength: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    value: '1',\n  }\n\n  handlerToggler = () => (\n    this.setState(state => ({ isVisible: !state.isVisible }))\n  )\n\n  sortAlphabetically = () => (\n    this.setState(prevState => ({ list: [...prevState.list].sort() }))\n  )\n\n  sortByLength = () => (\n    this.setState(prevState => ({\n      list: [...prevState.list].sort((a, b) => a.length - b.length),\n    }))\n  )\n\n  reverse = () => (\n    this.setState(prevState => ({\n      list: [...prevState.list].reverse(),\n    }))\n  )\n\n  reset = () => (\n    this.setState({\n      list: [...this.props.list],\n      value: 1,\n    })\n  )\n\n  render() {\n    const { list, selectLength, value, isVisible } = this.state;\n    const filteredGoods = list.filter(good => good.length >= value);\n\n    return (\n      <>\n        {isVisible\n          ? (\n            <div>\n              <List list={filteredGoods} />\n\n              <button type=\"button\" onClick={this.sortAlphabetically}>\n                Sort alphabetically\n              </button>\n\n              <button type=\"button\" onClick={this.sortByLength}>\n                Sort by length\n              </button>\n\n              <button type=\"button\" onClick={this.reverse}>\n                Reverse\n              </button>\n\n              <button type=\"button\" onClick={this.reset}>\n                Reset\n              </button>\n\n              <select\n                value={value}\n                onChange={(event) => {\n                  this.setState({ value: +event.target.value });\n                }}\n              >\n                {selectLength.map(item => (\n                  <option key={item}>{item}</option>\n                ))}\n              </select>\n\n            </div>\n          )\n          : ''}\n        {!isVisible\n          ? (\n            <button type=\"button\" onClick={this.handlerToggler}>\n              Click me\n            </button>\n          )\n          : ''}\n      </>\n    );\n  }\n}\n\nStart.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default Start;\n","import React from 'react';\nimport './App.css';\nimport Start from './components/Start';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    <Start list={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}